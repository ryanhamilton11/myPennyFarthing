// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using myPennyFarthing.Models;

namespace myPennyFarthing.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210522195937_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("myPennyFarthing.Models.Bike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bike", "myPennyFarthing");
                });

            modelBuilder.Entity("myPennyFarthing.Models.MX", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BikeId")
                        .HasColumnType("int");

                    b.Property<float>("Cost")
                        .HasColumnType("float(7)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<float>("Mileage")
                        .HasColumnType("float(7)");

                    b.HasKey("Id");

                    b.HasIndex("BikeId");

                    b.ToTable("Maintenance", "myPennyFarthing");
                });

            modelBuilder.Entity("myPennyFarthing.Models.Ride", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ascent")
                        .HasColumnType("int");

                    b.Property<float>("AvgCadence")
                        .HasColumnType("real");

                    b.Property<int>("AvgHR")
                        .HasColumnType("int");

                    b.Property<float>("AvgSpeed")
                        .HasColumnType("float(3)");

                    b.Property<int>("BikeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Descent")
                        .HasColumnType("int");

                    b.Property<float>("Distance")
                        .HasColumnType("float(5)");

                    b.Property<float>("HighGrade")
                        .HasColumnType("float(3)");

                    b.Property<float>("LowGrade")
                        .HasColumnType("float(3)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BikeId");

                    b.ToTable("Ride", "myPennyFarthing");
                });

            modelBuilder.Entity("myPennyFarthing.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("User", "myPennyFarthing");
                });

            modelBuilder.Entity("myPennyFarthing.Models.MX", b =>
                {
                    b.HasOne("myPennyFarthing.Models.Bike", "Bike")
                        .WithMany("MXs")
                        .HasForeignKey("BikeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bike");
                });

            modelBuilder.Entity("myPennyFarthing.Models.Ride", b =>
                {
                    b.HasOne("myPennyFarthing.Models.Bike", "Bike")
                        .WithMany("Rides")
                        .HasForeignKey("BikeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bike");
                });

            modelBuilder.Entity("myPennyFarthing.Models.Bike", b =>
                {
                    b.Navigation("MXs");

                    b.Navigation("Rides");
                });
#pragma warning restore 612, 618
        }
    }
}
